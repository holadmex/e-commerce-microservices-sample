name: "Deploy EKS with Terraform"

on:
  push:
    branches:
      - master
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      - master
    paths:
      - 'terraform/**'

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: gitops-eks

jobs:
  terraform:
    name: "Deploy EKS using Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Log Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "BUCKET_TF_STATE=${{ secrets.BUCKET_TF_STATE }}"
          echo "AWS_REGION=${{ env.AWS_REGION }}"
          echo "EKS_CLUSTER=${{ env.EKS_CLUSTER }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}" -backend-config="region=${{ env.AWS_REGION }}"

      - name: Validate Terraform Configuration
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=planfile

      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve planfile

      - name: Update kubeconfig
        if: success()
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Output Success Message
        if: success()
        run: echo "Terraform apply completed successfully!"
